@page "/solicitud-prestamo"
@page "/solicitud-prestamo/{idusr:int}"
@using BancoGogh.Shared.Models
@inject HttpClient Http


<PageTitle>Solicitud de Préstamo</PageTitle>

<h1>Solicitud de Préstamo</h1>
<h3>Valor de idusr: @idusr</h3>

<EditForm Model="@prestamo" OnValidSubmit="Save">
  <div class="mb-3">
    <label for="cantidad">Cantidad solicitada</label>
    <InputNumber @bind-Value="prestamo.CantidadPrestamo" class="form-control" 
       min="1" required></InputNumber>
    <small class="form-text text-muted">La cantidad solicitada debe ser mayor a cero.</small>
  </div>
  <div class="mb-3">
    <label for="plazo">Plazo</label>
    <InputSelect @bind-Value="prestamo.Plazos" class="form-control" id="plazo" name="plazo" required>
      <option value="1">6 meses</option>
      <option value="2">12 meses</option>
      <option value="3">24 meses</option>
      <option value="4">36 meses</option>
    </InputSelect>
  </div>
  <button type="submit" class="btn btn-primary"  onclick="location.href = 'UsuarioIndex/@idusr'">Enviar solicitud</button>
</EditForm>

@code {
    [Parameter]
    public int idusr { get; set; }
    
  Prestamo prestamo = new();
  Status status = new();

  private async Task Save(){
      Console.WriteLine(prestamo.CantidadPrestamo);
      Console.WriteLine(prestamo.Plazos);
     status.StatusCode=0;
     prestamo.IdUsuario=idusr;
     prestamo.IdEmpleado=0;
     prestamo.FecSolicitudPrestamo=DateTime.Now.ToString(("dd/MM/yyyy"));
     prestamo.FecAprobacionPrestamo=DateTime.Now.ToString(("dd/MM/yyyy"));
    try {
        var response = await Http.PostAsJsonAsync("api/Banco/AddPrestamo",prestamo);
        status = await response.Content.ReadFromJsonAsync<Status>();
    } catch(Exception ex) {
        Console.WriteLine(ex.Message);
    }


  }
  
  }

